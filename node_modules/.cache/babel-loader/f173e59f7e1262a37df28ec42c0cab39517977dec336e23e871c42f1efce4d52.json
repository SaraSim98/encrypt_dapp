{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\OneDrive\\\\Desktop\\\\firma\\\\signature-generator-app\\\\src\\\\components\\\\EncryptWithMetaMask.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { encrypt } from \"@metamask/eth-sig-util\";\nimport { Buffer } from \"buffer\";\nimport { keccak256, getBytes, Signature, BrowserProvider } from \"ethers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EncryptAndSignSeparate() {\n  _s();\n  const [message, setMessage] = useState(\"\");\n  const [ciphertextHex, setCiphertextHex] = useState(\"\");\n  const [results, setResults] = useState(null);\n  const [error, setError] = useState(\"\");\n  const [step, setStep] = useState(1); // 1 = cifratura, 2 = firma\n\n  const requestAccount = async () => {\n    await window.ethereum.request({\n      method: \"wallet_requestPermissions\",\n      params: [{\n        eth_accounts: {}\n      }]\n    });\n    const accounts = await window.ethereum.request({\n      method: \"eth_accounts\"\n    });\n    return accounts[0];\n  };\n  const handleEncrypt = async () => {\n    setError(\"\");\n    try {\n      const address = await requestAccount(); // Alfa\n      const publicKey = await window.ethereum.request({\n        method: \"eth_getEncryptionPublicKey\",\n        params: [address]\n      });\n      const encryptedObject = encrypt({\n        publicKey,\n        data: message,\n        version: \"x25519-xsalsa20-poly1305\"\n      });\n      const ciphertextBase64 = encryptedObject.ciphertext;\n      const hex = Buffer.from(ciphertextBase64, \"base64\").toString(\"hex\");\n      setCiphertextHex(hex);\n      setStep(2); // Abilita la firma\n    } catch (err) {\n      setError(\"Errore durante la cifratura: \" + err.message);\n    }\n  };\n  const handleSign = async () => {\n    setError(\"\");\n    try {\n      // Forza MetaMask a farti scegliere un nuovo account (Beta)\n      const betaAddress = await requestAccount();\n      const ciphertextBytes = Buffer.from(ciphertextHex, \"hex\");\n      const hashHex = keccak256(ciphertextBytes);\n      const hashBigInt = BigInt(hashHex);\n      const provider = new BrowserProvider(window.ethereum);\n      const signer = await provider.getSigner();\n      const flatSig = await signer.signMessage(getBytes(hashHex));\n      const sigObj = Signature.from(flatSig);\n      setResults({\n        encryptedHex: \"0x\" + ciphertextHex,\n        hashHex,\n        hashDec: hashBigInt.toString(),\n        signature: flatSig,\n        v: sigObj.v,\n        r: sigObj.r,\n        s: sigObj.s,\n        betaAddress\n      });\n    } catch (err) {\n      setError(\"Errore durante la firma: \" + err.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"1rem\",\n      fontFamily: \"Arial, sans-serif\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD83D\\uDD10 Cifra e Firma un Messaggio\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      placeholder: \"Scrivi un messaggio\",\n      value: message,\n      onChange: e => setMessage(e.target.value),\n      rows: 4,\n      style: {\n        width: \"100%\",\n        marginBottom: \"1rem\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleEncrypt,\n      style: {\n        marginBottom: \"1rem\"\n      },\n      children: \"\\uD83D\\uDD12 Cifra con Alfa (mittente)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), step === 2 && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSign,\n      style: {\n        marginBottom: \"1rem\"\n      },\n      children: \"\\u270D\\uFE0F Firma con Beta (relay)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }, this), results && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"2rem\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uD83D\\uDCE6 Risultati\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Messaggio cifrato (hex):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 14\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        readOnly: true,\n        value: results.encryptedHex,\n        style: {\n          width: \"100%\",\n          height: \"80px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Hash (hex):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 14\n        }, this), \" \", results.hashHex]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Hash (decimale):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 14\n        }, this), \" \", results.hashDec]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Firma di Beta (v, r, s):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 14\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"code\", {\n            children: \"v:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 17\n          }, this), \" \", results.v]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"code\", {\n            children: \"r:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 17\n          }, this), \" \", results.r]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"code\", {\n            children: \"s:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 17\n          }, this), \" \", results.s]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"code\", {\n            children: \"Beta address:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 17\n          }, this), \" \", results.betaAddress]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n_s(EncryptAndSignSeparate, \"rHsm09mq5ofGqdZN1+6Inzr7rG4=\");\n_c = EncryptAndSignSeparate;\nvar _c;\n$RefreshReg$(_c, \"EncryptAndSignSeparate\");","map":{"version":3,"names":["React","useState","encrypt","Buffer","keccak256","getBytes","Signature","BrowserProvider","jsxDEV","_jsxDEV","EncryptAndSignSeparate","_s","message","setMessage","ciphertextHex","setCiphertextHex","results","setResults","error","setError","step","setStep","requestAccount","window","ethereum","request","method","params","eth_accounts","accounts","handleEncrypt","address","publicKey","encryptedObject","data","version","ciphertextBase64","ciphertext","hex","from","toString","err","handleSign","betaAddress","ciphertextBytes","hashHex","hashBigInt","BigInt","provider","signer","getSigner","flatSig","signMessage","sigObj","encryptedHex","hashDec","signature","v","r","s","style","padding","fontFamily","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","e","target","rows","width","marginBottom","onClick","color","marginTop","readOnly","height","_c","$RefreshReg$"],"sources":["C:/Users/User/OneDrive/Desktop/firma/signature-generator-app/src/components/EncryptWithMetaMask.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { encrypt } from \"@metamask/eth-sig-util\";\nimport { Buffer } from \"buffer\";\nimport { keccak256, getBytes, Signature, BrowserProvider } from \"ethers\";\n\nexport default function EncryptAndSignSeparate() {\n  const [message, setMessage] = useState(\"\");\n  const [ciphertextHex, setCiphertextHex] = useState(\"\");\n  const [results, setResults] = useState(null);\n  const [error, setError] = useState(\"\");\n  const [step, setStep] = useState(1); // 1 = cifratura, 2 = firma\n\n  const requestAccount = async () => {\n    await window.ethereum.request({\n      method: \"wallet_requestPermissions\",\n      params: [{ eth_accounts: {} }],\n    });\n    const accounts = await window.ethereum.request({ method: \"eth_accounts\" });\n    return accounts[0];\n  };\n\n  const handleEncrypt = async () => {\n    setError(\"\");\n    try {\n      const address = await requestAccount(); // Alfa\n      const publicKey = await window.ethereum.request({\n        method: \"eth_getEncryptionPublicKey\",\n        params: [address],\n      });\n\n      const encryptedObject = encrypt({\n        publicKey,\n        data: message,\n        version: \"x25519-xsalsa20-poly1305\",\n      });\n\n      const ciphertextBase64 = encryptedObject.ciphertext;\n      const hex = Buffer.from(ciphertextBase64, \"base64\").toString(\"hex\");\n\n      setCiphertextHex(hex);\n      setStep(2); // Abilita la firma\n    } catch (err) {\n      setError(\"Errore durante la cifratura: \" + err.message);\n    }\n  };\n\n  const handleSign = async () => {\n    setError(\"\");\n    try {\n      // Forza MetaMask a farti scegliere un nuovo account (Beta)\n      const betaAddress = await requestAccount();\n\n      const ciphertextBytes = Buffer.from(ciphertextHex, \"hex\");\n      const hashHex = keccak256(ciphertextBytes);\n      const hashBigInt = BigInt(hashHex);\n\n      const provider = new BrowserProvider(window.ethereum);\n      const signer = await provider.getSigner();\n\n      const flatSig = await signer.signMessage(getBytes(hashHex));\n      const sigObj = Signature.from(flatSig);\n\n      setResults({\n        encryptedHex: \"0x\" + ciphertextHex,\n        hashHex,\n        hashDec: hashBigInt.toString(),\n        signature: flatSig,\n        v: sigObj.v,\n        r: sigObj.r,\n        s: sigObj.s,\n        betaAddress,\n      });\n    } catch (err) {\n      setError(\"Errore durante la firma: \" + err.message);\n    }\n  };\n\n  return (\n    <div style={{ padding: \"1rem\", fontFamily: \"Arial, sans-serif\" }}>\n      <h2>🔐 Cifra e Firma un Messaggio</h2>\n\n      <textarea\n        placeholder=\"Scrivi un messaggio\"\n        value={message}\n        onChange={(e) => setMessage(e.target.value)}\n        rows={4}\n        style={{ width: \"100%\", marginBottom: \"1rem\" }}\n      />\n\n      <button onClick={handleEncrypt} style={{ marginBottom: \"1rem\" }}>\n        🔒 Cifra con Alfa (mittente)\n      </button>\n\n      {step === 2 && (\n        <button onClick={handleSign} style={{ marginBottom: \"1rem\" }}>\n          ✍️ Firma con Beta (relay)\n        </button>\n      )}\n\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\n\n      {results && (\n        <div style={{ marginTop: \"2rem\" }}>\n          <h3>📦 Risultati</h3>\n          <p><strong>Messaggio cifrato (hex):</strong></p>\n          <textarea readOnly value={results.encryptedHex} style={{ width: \"100%\", height: \"80px\" }} />\n          <p><strong>Hash (hex):</strong> {results.hashHex}</p>\n          <p><strong>Hash (decimale):</strong> {results.hashDec}</p>\n          <p><strong>Firma di Beta (v, r, s):</strong></p>\n          <ul>\n            <li><code>v:</code> {results.v}</li>\n            <li><code>r:</code> {results.r}</li>\n            <li><code>s:</code> {results.s}</li>\n            <li><code>Beta address:</code> {results.betaAddress}</li>\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}