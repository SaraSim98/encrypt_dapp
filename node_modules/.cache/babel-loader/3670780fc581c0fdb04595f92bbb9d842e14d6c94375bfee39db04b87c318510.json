{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\OneDrive\\\\Desktop\\\\firma\\\\signature-generator-app\\\\src\\\\components\\\\EncryptWithMetaMask.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { encrypt } from \"@metamask/eth-sig-util\";\nimport { Buffer } from \"buffer\";\nimport { keccak256, getBytes, Signature, BrowserProvider } from \"ethers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EncryptAndSignWithMetaMask({\n  setError = () => {},\n  onSubmit = () => {}\n}) {\n  _s();\n  const [message, setMessage] = useState(\"\");\n  const [results, setResults] = useState(null);\n  const handleEncryptAndSign = async e => {\n    e.preventDefault();\n    setError(\"\");\n    setResults(null);\n    if (!window.ethereum) {\n      setError(\"MetaMask non è installato.\");\n      return;\n    }\n    try {\n      // 1. Connetti a MetaMask\n      const provider = new BrowserProvider(window.ethereum);\n      await provider.send(\"eth_requestAccounts\", []);\n      const signer = await provider.getSigner();\n      const address = await signer.getAddress();\n\n      // 2. Ottieni la chiave pubblica di cifratura\n      const publicKey = await window.ethereum.request({\n        method: \"eth_getEncryptionPublicKey\",\n        params: [address]\n      });\n\n      // 3. Cifra il messaggio\n      const encryptedObject = encrypt({\n        publicKey,\n        data: message,\n        version: \"x25519-xsalsa20-poly1305\"\n      });\n      const ciphertextBase64 = encryptedObject.ciphertext;\n      const ciphertextHex = Buffer.from(ciphertextBase64, \"base64\").toString(\"hex\");\n      const ciphertextBytes = Buffer.from(ciphertextBase64, \"base64\");\n\n      // 4. Calcola l'hash del messaggio cifrato\n      const messageHashHex = keccak256(ciphertextBytes);\n      const messageHashBigInt = BigInt(messageHashHex);\n\n      // 5. Firma l'hash con MetaMask (firma dell'utente B)\n      const flatSig = await signer.signMessage(getBytes(messageHashHex));\n      const sigObj = Signature.from(flatSig);\n      const result = {\n        encryptedHex: \"0x\" + ciphertextHex,\n        hashHex: messageHashHex,\n        hashDec: messageHashBigInt.toString(),\n        signature: flatSig,\n        v: sigObj.v,\n        r: sigObj.r,\n        s: sigObj.s\n      };\n      setResults(result);\n      onSubmit(result);\n    } catch (err) {\n      setError(\"Errore: \" + (err.message || \"Errore sconosciuto\"));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleEncryptAndSign,\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: message,\n        onChange: e => setMessage(e.target.value),\n        placeholder: \"Scrivi un messaggio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Cifra e Firma\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), results && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Messaggio cifrato (hex):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 14\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        readOnly: true,\n        value: results.encryptedHex,\n        style: {\n          width: \"100%\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Hash (hex):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 14\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        readOnly: true,\n        value: results.hashHex,\n        style: {\n          width: \"100%\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Hash (decimale):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 14\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        readOnly: true,\n        value: results.hashDec,\n        style: {\n          width: \"100%\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Firma (v, r, s):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 14\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"v: \", results.v]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"r: \", results.r]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"s: \", results.s]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n_s(EncryptAndSignWithMetaMask, \"b50q1FzEgKggq33aDKEvve+3YVs=\");\n_c = EncryptAndSignWithMetaMask;\nvar _c;\n$RefreshReg$(_c, \"EncryptAndSignWithMetaMask\");","map":{"version":3,"names":["React","useState","encrypt","Buffer","keccak256","getBytes","Signature","BrowserProvider","jsxDEV","_jsxDEV","EncryptAndSignWithMetaMask","setError","onSubmit","_s","message","setMessage","results","setResults","handleEncryptAndSign","e","preventDefault","window","ethereum","provider","send","signer","getSigner","address","getAddress","publicKey","request","method","params","encryptedObject","data","version","ciphertextBase64","ciphertext","ciphertextHex","from","toString","ciphertextBytes","messageHashHex","messageHashBigInt","BigInt","flatSig","signMessage","sigObj","result","encryptedHex","hashHex","hashDec","signature","v","r","s","err","children","value","onChange","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","type","readOnly","style","width","_c","$RefreshReg$"],"sources":["C:/Users/User/OneDrive/Desktop/firma/signature-generator-app/src/components/EncryptWithMetaMask.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { encrypt } from \"@metamask/eth-sig-util\";\nimport { Buffer } from \"buffer\";\nimport { keccak256, getBytes, Signature, BrowserProvider } from \"ethers\";\n\nexport default function EncryptAndSignWithMetaMask({ setError = () => {}, onSubmit = () => {} }) {\n  const [message, setMessage] = useState(\"\");\n  const [results, setResults] = useState(null);\n\n  const handleEncryptAndSign = async (e) => {\n    e.preventDefault();\n    setError(\"\");\n    setResults(null);\n\n    if (!window.ethereum) {\n      setError(\"MetaMask non è installato.\");\n      return;\n    }\n\n    try {\n      // 1. Connetti a MetaMask\n      const provider = new BrowserProvider(window.ethereum);\n      await provider.send(\"eth_requestAccounts\", []);\n      const signer = await provider.getSigner();\n      const address = await signer.getAddress();\n\n      // 2. Ottieni la chiave pubblica di cifratura\n      const publicKey = await window.ethereum.request({\n        method: \"eth_getEncryptionPublicKey\",\n        params: [address],\n      });\n\n      // 3. Cifra il messaggio\n      const encryptedObject = encrypt({\n        publicKey,\n        data: message,\n        version: \"x25519-xsalsa20-poly1305\",\n      });\n\n      const ciphertextBase64 = encryptedObject.ciphertext;\n      const ciphertextHex = Buffer.from(ciphertextBase64, \"base64\").toString(\"hex\");\n      const ciphertextBytes = Buffer.from(ciphertextBase64, \"base64\");\n\n      // 4. Calcola l'hash del messaggio cifrato\n      const messageHashHex = keccak256(ciphertextBytes);\n      const messageHashBigInt = BigInt(messageHashHex);\n\n      // 5. Firma l'hash con MetaMask (firma dell'utente B)\n      const flatSig = await signer.signMessage(getBytes(messageHashHex));\n      const sigObj = Signature.from(flatSig);\n\n      const result = {\n        encryptedHex: \"0x\" + ciphertextHex,\n        hashHex: messageHashHex,\n        hashDec: messageHashBigInt.toString(),\n        signature: flatSig,\n        v: sigObj.v,\n        r: sigObj.r,\n        s: sigObj.s,\n      };\n\n      setResults(result);\n      onSubmit(result);\n    } catch (err) {\n      setError(\"Errore: \" + (err.message || \"Errore sconosciuto\"));\n    }\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleEncryptAndSign}>\n        <textarea\n          value={message}\n          onChange={(e) => setMessage(e.target.value)}\n          placeholder=\"Scrivi un messaggio\"\n        />\n        <button type=\"submit\">Cifra e Firma</button>\n      </form>\n\n      {results && (\n        <div>\n          <p><strong>Messaggio cifrato (hex):</strong></p>\n          <textarea readOnly value={results.encryptedHex} style={{ width: \"100%\" }} />\n\n          <p><strong>Hash (hex):</strong></p>\n          <textarea readOnly value={results.hashHex} style={{ width: \"100%\" }} />\n\n          <p><strong>Hash (decimale):</strong></p>\n          <textarea readOnly value={results.hashDec} style={{ width: \"100%\" }} />\n\n          <p><strong>Firma (v, r, s):</strong></p>\n          <div>v: {results.v}</div>\n          <div>r: {results.r}</div>\n          <div>s: {results.s}</div>\n        </div>\n      )}\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}