{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\OneDrive\\\\Desktop\\\\firma\\\\signature-generator-app\\\\src\\\\components\\\\EncryptWithMetaMask.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { encrypt } from \"@metamask/eth-sig-util\";\nimport { Buffer } from \"buffer\";\nimport { getBytes, Signature, BrowserProvider } from \"ethers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EncryptAndSignSeparate() {\n  _s();\n  const [message, setMessage] = useState(\"\");\n  const [ciphertextHex, setCiphertextHex] = useState(\"\");\n  const [hashHex, setHashHex] = useState(\"\");\n  const [hashDec, setHashDec] = useState(\"\");\n  const [results, setResults] = useState(null);\n  const [error, setError] = useState(\"\");\n  const requestAccount = async () => {\n    await window.ethereum.request({\n      method: \"wallet_requestPermissions\",\n      params: [{\n        eth_accounts: {}\n      }]\n    });\n    const accounts = await window.ethereum.request({\n      method: \"eth_accounts\"\n    });\n    return accounts[0];\n  };\n  const handleEncrypt = async () => {\n    setError(\"\");\n    setResults(null);\n    try {\n      const address = await requestAccount();\n      const publicKey = await window.ethereum.request({\n        method: \"eth_getEncryptionPublicKey\",\n        params: [address]\n      });\n      const encryptedObject = encrypt({\n        publicKey,\n        data: message,\n        version: \"x25519-xsalsa20-poly1305\"\n      });\n      console.log(JSON.stringify(encryptedObject, null, 2));\n      const ciphertextBase64 = encryptedObject.ciphertext;\n      const hex = Buffer.from(ciphertextBase64, \"base64\").toString(\"hex\");\n      const ciphertextBytes = Buffer.from(hex, \"hex\");\n      const hash = keccak256(ciphertextBytes);\n      const hashBigInt = BigInt(hash);\n      setCiphertextHex(hex);\n      setHashHex(hash);\n      setHashDec(hashBigInt.toString());\n    } catch (err) {\n      setError(\"Errore durante la cifratura: \" + err.message);\n    }\n  };\n  const handleSign = async () => {\n    setError(\"\");\n    try {\n      const address = await requestAccount();\n      const provider = new BrowserProvider(window.ethereum);\n      const signer = await provider.getSigner();\n      //questa riga dice a MetaMask (tramite EIP-191) di firmare il messaggio 7\n      // (in questo caso, l’hash del messaggio cifrato) usando la chiave privata dell’account attivo.\n      const flatSig = await signer.signMessage(getBytes(hashHex));\n      //Il risultato (flatSig) è una firma compatta in formato concatenato: contiene al suo interno \n      // i tre componenti r, s, e v, codificati insieme.\n      const sigObj = Signature.from(flatSig);\n      setResults({\n        //formato compatto della firma\n        signature: flatSig,\n        v: sigObj.v,\n        r: sigObj.r,\n        s: sigObj.s,\n        betaAddress: address\n      });\n    } catch (err) {\n      setError(\"Errore durante la firma: \" + err.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"1rem\",\n      fontFamily: \"Arial, sans-serif\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Cifra e Firma un Messaggio\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      placeholder: \"Scrivi un messaggio\",\n      value: message,\n      onChange: e => setMessage(e.target.value),\n      rows: 4,\n      style: {\n        width: \"100%\",\n        marginBottom: \"1rem\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleEncrypt,\n      style: {\n        marginBottom: \"1rem\"\n      },\n      children: \"Cifra con Alfa (mittente)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), ciphertextHex && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"1rem\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \" Dati Cifrati\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Messaggio cifrato (hex):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 14\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        readOnly: true,\n        value: \"0x\" + ciphertextHex,\n        style: {\n          width: \"100%\",\n          height: \"80px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Hash (hex):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 14\n        }, this), \" \", hashHex]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Hash (decimale):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 14\n        }, this), \" \", hashDec]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSign,\n        style: {\n          marginTop: \"1rem\"\n        },\n        children: \"Firma con Beta (relay)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this), results && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"2rem\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \" Firma\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"code\", {\n            children: \"v:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 17\n          }, this), \" \", results.v]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"code\", {\n            children: \"r:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 17\n          }, this), \" \", results.r]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"code\", {\n            children: \"s:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 17\n          }, this), \" \", results.s]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"code\", {\n            children: \"Beta address:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 17\n          }, this), \" \", results.betaAddress]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n_s(EncryptAndSignSeparate, \"WsHengziwHuRJpijoWPP9d+qNWU=\");\n_c = EncryptAndSignSeparate;\nvar _c;\n$RefreshReg$(_c, \"EncryptAndSignSeparate\");","map":{"version":3,"names":["React","useState","encrypt","Buffer","getBytes","Signature","BrowserProvider","jsxDEV","_jsxDEV","EncryptAndSignSeparate","_s","message","setMessage","ciphertextHex","setCiphertextHex","hashHex","setHashHex","hashDec","setHashDec","results","setResults","error","setError","requestAccount","window","ethereum","request","method","params","eth_accounts","accounts","handleEncrypt","address","publicKey","encryptedObject","data","version","console","log","JSON","stringify","ciphertextBase64","ciphertext","hex","from","toString","ciphertextBytes","hash","keccak256","hashBigInt","BigInt","err","handleSign","provider","signer","getSigner","flatSig","signMessage","sigObj","signature","v","r","s","betaAddress","style","padding","fontFamily","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","e","target","rows","width","marginBottom","onClick","marginTop","readOnly","height","color","_c","$RefreshReg$"],"sources":["C:/Users/User/OneDrive/Desktop/firma/signature-generator-app/src/components/EncryptWithMetaMask.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { encrypt } from \"@metamask/eth-sig-util\";\nimport { Buffer } from \"buffer\";\nimport {  getBytes, Signature, BrowserProvider } from \"ethers\";\n\nexport default function EncryptAndSignSeparate() {\n  const [message, setMessage] = useState(\"\");\n  const [ciphertextHex, setCiphertextHex] = useState(\"\");\n  const [hashHex, setHashHex] = useState(\"\");\n  const [hashDec, setHashDec] = useState(\"\");\n  const [results, setResults] = useState(null);\n  const [error, setError] = useState(\"\");\n\n  const requestAccount = async () => {\n    await window.ethereum.request({\n      method: \"wallet_requestPermissions\",\n      params: [{ eth_accounts: {} }],\n    });\n    const accounts = await window.ethereum.request({ method: \"eth_accounts\" });\n    return accounts[0];\n  };\n\n  const handleEncrypt = async () => {\n    setError(\"\");\n    setResults(null);\n    try {\n      const address = await requestAccount();\n      const publicKey = await window.ethereum.request({\n        method: \"eth_getEncryptionPublicKey\",\n        params: [address],\n      });\n\n      const encryptedObject = encrypt({\n        publicKey,\n        data: message,\n        version: \"x25519-xsalsa20-poly1305\",\n      });\n      console.log(JSON.stringify(encryptedObject, null, 2));\n\n\n\n      const ciphertextBase64 = encryptedObject.ciphertext;\n      const hex = Buffer.from(ciphertextBase64, \"base64\").toString(\"hex\");\n\n      const ciphertextBytes = Buffer.from(hex, \"hex\");\n      const hash = keccak256(ciphertextBytes);\n      const hashBigInt = BigInt(hash);\n\n      setCiphertextHex(hex);\n      setHashHex(hash);\n      setHashDec(hashBigInt.toString());\n    } catch (err) {\n      setError(\"Errore durante la cifratura: \" + err.message);\n    }\n  };\n\n  const handleSign = async () => {\n    setError(\"\");\n    try {\n      const address = await requestAccount();\n      const provider = new BrowserProvider(window.ethereum);\n      const signer = await provider.getSigner();\n      //questa riga dice a MetaMask (tramite EIP-191) di firmare il messaggio 7\n      // (in questo caso, l’hash del messaggio cifrato) usando la chiave privata dell’account attivo.\n      const flatSig = await signer.signMessage(getBytes(hashHex));\n      //Il risultato (flatSig) è una firma compatta in formato concatenato: contiene al suo interno \n      // i tre componenti r, s, e v, codificati insieme.\n      const sigObj = Signature.from(flatSig);\n\n      setResults({\n        //formato compatto della firma\n        signature: flatSig,\n        v: sigObj.v,\n        r: sigObj.r,\n        s: sigObj.s,\n        betaAddress: address,\n      });\n    } catch (err) {\n      setError(\"Errore durante la firma: \" + err.message);\n    }\n  };\n\n  return (\n    <div style={{ padding: \"1rem\", fontFamily: \"Arial, sans-serif\" }}>\n      <h2>Cifra e Firma un Messaggio</h2>\n      \n\n      <textarea\n        placeholder=\"Scrivi un messaggio\"\n        value={message}\n        onChange={(e) => setMessage(e.target.value)}\n        rows={4}\n        style={{ width: \"100%\", marginBottom: \"1rem\" }}\n      />\n\n      <button onClick={handleEncrypt} style={{ marginBottom: \"1rem\" }}>\n         Cifra con Alfa (mittente)\n      </button>\n\n      {ciphertextHex && (\n        <div style={{ marginTop: \"1rem\" }}>\n          <h3> Dati Cifrati</h3>\n          <p><strong>Messaggio cifrato (hex):</strong></p>\n          <textarea readOnly value={\"0x\" + ciphertextHex} style={{ width: \"100%\", height: \"80px\" }} />\n          <p><strong>Hash (hex):</strong> {hashHex}</p>\n          <p><strong>Hash (decimale):</strong> {hashDec}</p>\n\n          <button onClick={handleSign} style={{ marginTop: \"1rem\" }}>\n             Firma con Beta (relay)\n          </button>\n        </div>\n      )}\n\n      {results && (\n        <div style={{ marginTop: \"2rem\" }}>\n          <h3> Firma</h3>\n          <ul>\n            <li><code>v:</code> {results.v}</li>\n            <li><code>r:</code> {results.r}</li>\n            <li><code>s:</code> {results.s}</li>\n            <li><code>Beta address:</code> {results.betaAddress}</li>\n          </ul>\n        </div>\n      )}\n\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}