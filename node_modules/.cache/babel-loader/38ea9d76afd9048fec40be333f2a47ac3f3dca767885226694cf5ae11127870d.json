{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\OneDrive\\\\Desktop\\\\firma\\\\signature-generator-app\\\\src\\\\components\\\\EncryptWithMetaMask.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { encrypt } from \"@metamask/eth-sig-util\";\nimport { Buffer } from \"buffer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EncryptWithMetaMask({\n  setError = () => {}\n}) {\n  _s();\n  const [message, setMessage] = useState(\"\");\n  const [encryptedData, setEncryptedData] = useState(\"\");\n  const handleEncrypt = async e => {\n    e.preventDefault();\n    setError(\"\");\n    setEncryptedData(\"\");\n    if (!window.ethereum) {\n      setError(\"MetaMask non è installato.\");\n      return;\n    }\n    try {\n      const accounts = await window.ethereum.request({\n        method: \"eth_requestAccounts\"\n      });\n      const address = accounts[0];\n      const publicKey = await window.ethereum.request({\n        method: \"eth_getEncryptionPublicKey\",\n        params: [address]\n      });\n      const encryptedObject = encrypt({\n        publicKey,\n        data: message,\n        version: \"x25519-xsalsa20-poly1305\"\n      });\n      setEncryptedData(JSON.stringify(encryptedObject, null, 2));\n    } catch (err) {\n      setError(\"Errore: \" + err.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleEncrypt,\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: message,\n        onChange: e => setMessage(e.target.value),\n        placeholder: \"Scrivi un messaggio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Cifra\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), encryptedData && /*#__PURE__*/_jsxDEV(\"textarea\", {\n      readOnly: true,\n      value: encryptedData,\n      style: {\n        width: \"100%\",\n        height: \"200px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(EncryptWithMetaMask, \"ASjAEUOS360zsgh/EVngCK5vHqI=\");\n_c = EncryptWithMetaMask;\nvar _c;\n$RefreshReg$(_c, \"EncryptWithMetaMask\");","map":{"version":3,"names":["React","useState","encrypt","Buffer","jsxDEV","_jsxDEV","EncryptWithMetaMask","setError","_s","message","setMessage","encryptedData","setEncryptedData","handleEncrypt","e","preventDefault","window","ethereum","accounts","request","method","address","publicKey","params","encryptedObject","data","version","JSON","stringify","err","children","onSubmit","value","onChange","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","type","readOnly","style","width","height","_c","$RefreshReg$"],"sources":["C:/Users/User/OneDrive/Desktop/firma/signature-generator-app/src/components/EncryptWithMetaMask.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { encrypt } from \"@metamask/eth-sig-util\";\nimport { Buffer } from \"buffer\";\n\nexport default function EncryptWithMetaMask({ setError = () => {} }) {\n  const [message, setMessage] = useState(\"\");\n  const [encryptedData, setEncryptedData] = useState(\"\");\n\n  const handleEncrypt = async (e) => {\n    e.preventDefault();\n    setError(\"\");\n    setEncryptedData(\"\");\n\n    if (!window.ethereum) {\n      setError(\"MetaMask non è installato.\");\n      return;\n    }\n\n    try {\n      const accounts = await window.ethereum.request({ method: \"eth_requestAccounts\" });\n      const address = accounts[0];\n\n      const publicKey = await window.ethereum.request({\n        method: \"eth_getEncryptionPublicKey\",\n        params: [address],\n      });\n\n      const encryptedObject = encrypt({\n        publicKey,\n        data: message,\n        version: \"x25519-xsalsa20-poly1305\",\n      });\n\n      setEncryptedData(JSON.stringify(encryptedObject, null, 2));\n    } catch (err) {\n      setError(\"Errore: \" + err.message);\n    }\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleEncrypt}>\n        <textarea\n          value={message}\n          onChange={(e) => setMessage(e.target.value)}\n          placeholder=\"Scrivi un messaggio\"\n        />\n        <button type=\"submit\">Cifra</button>\n      </form>\n\n      {encryptedData && (\n        <textarea readOnly value={encryptedData} style={{ width: \"100%\", height: \"200px\" }} />\n      )}\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,OAAO,QAAQ,wBAAwB;AAChD,SAASC,MAAM,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,eAAe,SAASC,mBAAmBA,CAAC;EAAEC,QAAQ,GAAGA,CAAA,KAAM,CAAC;AAAE,CAAC,EAAE;EAAAC,EAAA;EACnE,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACU,aAAa,EAAEC,gBAAgB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEtD,MAAMY,aAAa,GAAG,MAAOC,CAAC,IAAK;IACjCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBR,QAAQ,CAAC,EAAE,CAAC;IACZK,gBAAgB,CAAC,EAAE,CAAC;IAEpB,IAAI,CAACI,MAAM,CAACC,QAAQ,EAAE;MACpBV,QAAQ,CAAC,4BAA4B,CAAC;MACtC;IACF;IAEA,IAAI;MACF,MAAMW,QAAQ,GAAG,MAAMF,MAAM,CAACC,QAAQ,CAACE,OAAO,CAAC;QAAEC,MAAM,EAAE;MAAsB,CAAC,CAAC;MACjF,MAAMC,OAAO,GAAGH,QAAQ,CAAC,CAAC,CAAC;MAE3B,MAAMI,SAAS,GAAG,MAAMN,MAAM,CAACC,QAAQ,CAACE,OAAO,CAAC;QAC9CC,MAAM,EAAE,4BAA4B;QACpCG,MAAM,EAAE,CAACF,OAAO;MAClB,CAAC,CAAC;MAEF,MAAMG,eAAe,GAAGtB,OAAO,CAAC;QAC9BoB,SAAS;QACTG,IAAI,EAAEhB,OAAO;QACbiB,OAAO,EAAE;MACX,CAAC,CAAC;MAEFd,gBAAgB,CAACe,IAAI,CAACC,SAAS,CAACJ,eAAe,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;IAC5D,CAAC,CAAC,OAAOK,GAAG,EAAE;MACZtB,QAAQ,CAAC,UAAU,GAAGsB,GAAG,CAACpB,OAAO,CAAC;IACpC;EACF,CAAC;EAED,oBACEJ,OAAA;IAAAyB,QAAA,gBACEzB,OAAA;MAAM0B,QAAQ,EAAElB,aAAc;MAAAiB,QAAA,gBAC5BzB,OAAA;QACE2B,KAAK,EAAEvB,OAAQ;QACfwB,QAAQ,EAAGnB,CAAC,IAAKJ,UAAU,CAACI,CAAC,CAACoB,MAAM,CAACF,KAAK,CAAE;QAC5CG,WAAW,EAAC;MAAqB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClC,CAAC,eACFlC,OAAA;QAAQmC,IAAI,EAAC,QAAQ;QAAAV,QAAA,EAAC;MAAK;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC,EAEN5B,aAAa,iBACZN,OAAA;MAAUoC,QAAQ;MAACT,KAAK,EAAErB,aAAc;MAAC+B,KAAK,EAAE;QAAEC,KAAK,EAAE,MAAM;QAAEC,MAAM,EAAE;MAAQ;IAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CACtF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAC/B,EAAA,CAnDuBF,mBAAmB;AAAAuC,EAAA,GAAnBvC,mBAAmB;AAAA,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}