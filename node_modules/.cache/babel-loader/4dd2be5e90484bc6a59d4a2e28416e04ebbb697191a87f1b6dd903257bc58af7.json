{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\OneDrive\\\\Desktop\\\\firma\\\\signature-generator-app\\\\src\\\\components\\\\EncryptWithMetaMask.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { encrypt } from \"@metamask/eth-sig-util\";\nimport { Buffer } from \"buffer\";\nimport { keccak256, getBytes, Signature, BrowserProvider } from \"ethers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EncryptAndSignSeparate() {\n  _s();\n  const [message, setMessage] = useState(\"\");\n  const [ciphertextHex, setCiphertextHex] = useState(\"\");\n  const [hashHex, setHashHex] = useState(\"\");\n  const [hashDec, setHashDec] = useState(\"\");\n  const [results, setResults] = useState(null);\n  const [error, setError] = useState(\"\");\n  const requestAccount = async () => {\n    const provider = new BrowserProvider(window.ethereum);\n    const accounts = await provider.send(\"eth_requestAccounts\", []);\n    return accounts[0];\n  };\n  const handleEncrypt = async () => {\n    setError(\"\");\n    setResults(null);\n    try {\n      const provider = new BrowserProvider(window.ethereum);\n      const accounts = await provider.send(\"eth_requestAccounts\", []);\n      const alfaAddress = accounts[0]; // primo account: Alfa\n\n      const publicKey = await provider.send(\"eth_getEncryptionPublicKey\", [alfaAddress]);\n      const encryptedObject = encrypt({\n        publicKey,\n        data: message,\n        version: \"x25519-xsalsa20-poly1305\"\n      });\n      const ciphertextBase64 = encryptedObject.ciphertext;\n      const hex = Buffer.from(ciphertextBase64, \"base64\").toString(\"hex\");\n      const ciphertextBytes = Buffer.from(hex, \"hex\");\n      const hash = keccak256(ciphertextBytes);\n      const hashBigInt = BigInt(hash);\n      setCiphertextHex(hex);\n      setHashHex(hash);\n      setHashDec(hashBigInt.toString());\n    } catch (err) {\n      setError(\"Errore durante la cifratura: \" + err.message);\n    }\n  };\n  const handleSign = async () => {\n    setError(\"\");\n    try {\n      const provider = new BrowserProvider(window.ethereum);\n      const accounts = await provider.send(\"eth_requestAccounts\", []);\n      const betaAddress = accounts[1] || accounts[0]; // secondo account: Beta, o lo stesso se uno solo\n\n      const signer = await provider.getSigner(betaAddress);\n      const flatSig = await signer.signMessage(getBytes(hashHex));\n      const sigObj = Signature.from(flatSig);\n      setResults({\n        signature: flatSig,\n        v: sigObj.v,\n        r: sigObj.r,\n        s: sigObj.s,\n        betaAddress\n      });\n    } catch (err) {\n      setError(\"Errore durante la firma: \" + err.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"1rem\",\n      fontFamily: \"Arial, sans-serif\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Cifra e Firma un Messaggio\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      placeholder: \"Scrivi un messaggio\",\n      value: message,\n      onChange: e => setMessage(e.target.value),\n      rows: 4,\n      style: {\n        width: \"100%\",\n        marginBottom: \"1rem\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleEncrypt,\n      style: {\n        marginBottom: \"1rem\"\n      },\n      children: \"Cifra con Alfa (mittente)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), ciphertextHex && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"1rem\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Dati Cifrati\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Messaggio cifrato (hex):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 14\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        readOnly: true,\n        value: \"0x\" + ciphertextHex,\n        style: {\n          width: \"100%\",\n          height: \"80px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Hash (hex):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 14\n        }, this), \" \", hashHex]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Hash (decimale):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 14\n        }, this), \" \", hashDec]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSign,\n        style: {\n          marginTop: \"1rem\"\n        },\n        children: \"Firma con Beta (relay)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this), results && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"2rem\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Firma\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"code\", {\n            children: \"v:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 17\n          }, this), \" \", results.v]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"code\", {\n            children: \"r:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 17\n          }, this), \" \", results.r]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"code\", {\n            children: \"s:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 17\n          }, this), \" \", results.s]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"code\", {\n            children: \"Beta address:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 17\n          }, this), \" \", results.betaAddress]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n_s(EncryptAndSignSeparate, \"WsHengziwHuRJpijoWPP9d+qNWU=\");\n_c = EncryptAndSignSeparate;\nvar _c;\n$RefreshReg$(_c, \"EncryptAndSignSeparate\");","map":{"version":3,"names":["React","useState","encrypt","Buffer","keccak256","getBytes","Signature","BrowserProvider","jsxDEV","_jsxDEV","EncryptAndSignSeparate","_s","message","setMessage","ciphertextHex","setCiphertextHex","hashHex","setHashHex","hashDec","setHashDec","results","setResults","error","setError","requestAccount","provider","window","ethereum","accounts","send","handleEncrypt","alfaAddress","publicKey","encryptedObject","data","version","ciphertextBase64","ciphertext","hex","from","toString","ciphertextBytes","hash","hashBigInt","BigInt","err","handleSign","betaAddress","signer","getSigner","flatSig","signMessage","sigObj","signature","v","r","s","style","padding","fontFamily","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","e","target","rows","width","marginBottom","onClick","marginTop","readOnly","height","color","_c","$RefreshReg$"],"sources":["C:/Users/User/OneDrive/Desktop/firma/signature-generator-app/src/components/EncryptWithMetaMask.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { encrypt } from \"@metamask/eth-sig-util\";\nimport { Buffer } from \"buffer\";\nimport { keccak256, getBytes, Signature, BrowserProvider } from \"ethers\";\n\nexport default function EncryptAndSignSeparate() {\n  const [message, setMessage] = useState(\"\");\n  const [ciphertextHex, setCiphertextHex] = useState(\"\");\n  const [hashHex, setHashHex] = useState(\"\");\n  const [hashDec, setHashDec] = useState(\"\");\n  const [results, setResults] = useState(null);\n  const [error, setError] = useState(\"\");\n\n  const requestAccount = async () => {\n    const provider = new BrowserProvider(window.ethereum);\n    const accounts = await provider.send(\"eth_requestAccounts\", []);\n    return accounts[0];\n  };\n\n  const handleEncrypt = async () => {\n    setError(\"\");\n    setResults(null);\n\n    try {\n      const provider = new BrowserProvider(window.ethereum);\n      const accounts = await provider.send(\"eth_requestAccounts\", []);\n      const alfaAddress = accounts[0]; // primo account: Alfa\n\n      const publicKey = await provider.send(\"eth_getEncryptionPublicKey\", [\n        alfaAddress,\n      ]);\n\n      const encryptedObject = encrypt({\n        publicKey,\n        data: message,\n        version: \"x25519-xsalsa20-poly1305\",\n      });\n\n      const ciphertextBase64 = encryptedObject.ciphertext;\n      const hex = Buffer.from(ciphertextBase64, \"base64\").toString(\"hex\");\n\n      const ciphertextBytes = Buffer.from(hex, \"hex\");\n      const hash = keccak256(ciphertextBytes);\n      const hashBigInt = BigInt(hash);\n\n      setCiphertextHex(hex);\n      setHashHex(hash);\n      setHashDec(hashBigInt.toString());\n    } catch (err) {\n      setError(\"Errore durante la cifratura: \" + err.message);\n    }\n  };\n\n  const handleSign = async () => {\n    setError(\"\");\n\n    try {\n      const provider = new BrowserProvider(window.ethereum);\n      const accounts = await provider.send(\"eth_requestAccounts\", []);\n      const betaAddress = accounts[1] || accounts[0]; // secondo account: Beta, o lo stesso se uno solo\n\n      const signer = await provider.getSigner(betaAddress);\n      const flatSig = await signer.signMessage(getBytes(hashHex));\n      const sigObj = Signature.from(flatSig);\n\n      setResults({\n        signature: flatSig,\n        v: sigObj.v,\n        r: sigObj.r,\n        s: sigObj.s,\n        betaAddress,\n      });\n    } catch (err) {\n      setError(\"Errore durante la firma: \" + err.message);\n    }\n  };\n\n  return (\n    <div style={{ padding: \"1rem\", fontFamily: \"Arial, sans-serif\" }}>\n      <h2>Cifra e Firma un Messaggio</h2>\n\n      <textarea\n        placeholder=\"Scrivi un messaggio\"\n        value={message}\n        onChange={(e) => setMessage(e.target.value)}\n        rows={4}\n        style={{ width: \"100%\", marginBottom: \"1rem\" }}\n      />\n\n      <button onClick={handleEncrypt} style={{ marginBottom: \"1rem\" }}>\n        Cifra con Alfa (mittente)\n      </button>\n\n      {ciphertextHex && (\n        <div style={{ marginTop: \"1rem\" }}>\n          <h3>Dati Cifrati</h3>\n          <p><strong>Messaggio cifrato (hex):</strong></p>\n          <textarea readOnly value={\"0x\" + ciphertextHex} style={{ width: \"100%\", height: \"80px\" }} />\n          <p><strong>Hash (hex):</strong> {hashHex}</p>\n          <p><strong>Hash (decimale):</strong> {hashDec}</p>\n\n          <button onClick={handleSign} style={{ marginTop: \"1rem\" }}>\n            Firma con Beta (relay)\n          </button>\n        </div>\n      )}\n\n      {results && (\n        <div style={{ marginTop: \"2rem\" }}>\n          <h3>Firma</h3>\n          <ul>\n            <li><code>v:</code> {results.v}</li>\n            <li><code>r:</code> {results.r}</li>\n            <li><code>s:</code> {results.s}</li>\n            <li><code>Beta address:</code> {results.betaAddress}</li>\n          </ul>\n        </div>\n      )}\n\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}